# OS independent make configuration file for GAMIT/GLOBK installation.
# Used by shell script unimake (see, in /com) and in conjunction with generic 
# Makefiles in each module directory (documented in Makefile.generic under 
# libraries/comlib).

# Created on July 16, 1996 by P. Fang.  Last modified by R. King 991203
    
(Tested for Sun OS4, Solaris 2, HP-UX, DEC OSF1, SGI IRIX)
(Code for IBM and DEC ULTRX present but not yet tested) 
 

# The rules of constructing this configuration file:

1. Each OS is identified by a character string and a pair of numbers.
   The character string should be the first 'word' (or 'token') printed
   when you type 'uname -a' on your system (e.g. 'SunOS' for Sun OS/4 and
   Solaris systems);  The numbers correspond to the range of OS versions 
   for which the configuration block is valid; they should be expanded with
   zeroes to 4 digits (e.g. 4110 4130 for SunOS versions 4.1.1 to 4.1.3), 
   to be compared numerically to the version given by the third word printed 
   by the 'uname -a' command when it also is expanded to 4 digits after removal
   of all letters (e.g., 0901 for HP-UX versions A.09.01) .  For the conversion 
   of the these by unimake see the three blocks of code below '#detect user system' 
   in the script.   
                  
2. To configure this file for your own system, you should normally have
   to change only the path for X11 (needed for CVIEW) and the size variables
   for GAMIT compilation.  If your system is not included among those given
   below, then you need to add it to this file. 
      
3. If you are using a compiler other than the one normally supplied by
   the manufacturer of your operating system (e.g., gcc and g77 with
   Solaris), then you need to use the '-c' option when invoking unimake.

4. The FFLAGS (but not yet CFLAGS) of Makefile.config can be overridden 
   with module-specific entries of the same form in Makefile.generic
   (see, e.g., gamit/solve/Makefile.generic).

5. Any valid compiler macros and compiler instructions can be used within an 
   OS dependent block.  

6. In the SUFFIX RULES and EXPLICIT rules blocks the entries must be indented
   with TABS, not spaces.  Be careful that the tab characters are not lost if you 
   transfer this file via e-mail.  In the 'ranlib' entry under EXPLICIT RULES for
   the Sun, the keyword THELIB is replaced in unimake by the name of the archive. 


# Notes on flags for GAMIT and GLOBK:
          
1. With a few exceptions handled by Makefile.generic entries, all of /libraries, 
   /gamit, and /kf can be made with the same compiler flags.  Hence, a single 
   version of Makefile.config can be kept in /libraries, with links to it set in
   /gamit and /kf.

2. For maximum speed, all of the code should be compiled with Fortran level-3 
   optimization, which has been well-tested under Sun OS/4, Solaris 2, and HP-UX.  
   There is one override of this setting, in gamit/utils under Solaris 2, because
   an early version of FORTRAN 77 4.0 had a bug causing failed compilation in 
   a (correct) statement in emntab.f.  Utils are used infrequently enough that
   the lower optimization will have little effect; on the other hand, if you've
   installed all of the patches provided by Sun, you will not have a problem with
   level-3 optimization.
   
3. Most of both programs have variable typing in the code--usually explicit
   but still in some routines implicit, so we have set the -u option in FFLAGS.
   The most glaring exception is gamit/solve, which is compiled without -u
   but has 'explicit none' in many routines.

4. Static storage (FFLAGS -K) is required for both programs under HP-UX.
 
5. There are many routines in /kf that have more than the default 21 continuation
   lines allowed by the Sun Fortran compilers; hence we use the -Nl100 option
   with FFLAGS.  

6. The C-compiler distributed by Sun in its standard 'bundle' will not 
   handle ANSI-standard code.  Hence you must purchase the 'licensed' compiler
   (also 'cc'), or obtain the (free) Gnu C-compiler (gcc) or equivalent.  


# ----------------------- common --------------------------------- #

# X11 library location - uncomment the appropriate one for you system
# Generic (will work on any system if links in place)
#X11LIBPATH /usr/lib/X11
#X11INCPATH /usr/include/X11 
# Specific for Sun with OpenWindows
X11LIBPATH /usr/openwin/lib
X11INCPATH /usr/openwin/share/include    
# Specific to Linux
#X11LIBPATH /usr/X11/lib
#X11INCPATH /usr/X11/include/X11     
# Specific for MIT HP and Sun for Release 5
#X11LIBPATH /usr/lib/X11R5
#X11INCPATH /usr/include/X11R5  

# GAMIT size dependent variables (read by script 'redim' which edits the include files)
MAXSIT 45
MAXSAT 28
MAXATM 13
MAXEPC 2880

# --------------- OS dependent blocks ---------------------------- #


# ------- for HP-UX 9.00 and above-------------- #
OS_ID HP-UX 0900 9999

# ASSIGMENTS

FFLAGS = -u +O3 +U77
CFLAGS = -g -c
FTN = fort77   
# f77 will not work since the -L option is defined differently
CC = cc

# EXPLICIT_RULES
# (not needed for HP)

# SUFFIX_RULES

.c.a:
	$(CC) $(CFLAGS) -I$(II) $<
	ar rv $@ $*.o
	rm -f $*.o

.f.a:
	$(FTN) -c $(FFLAGS) $<
	ar rv $@ $*.o
	rm -f $*.o

# BLOCKEND


# ----- for SunOS from 4.1.1 to 4.1.3.1 ------------ #
OS_ID SunOS 4110 4131

# ASSIGMENTS

FFLAGS = -O3 -u -Nl100
FTN = f77 
CFLAGS = -g -c
CC = cc

# EXPLICIT_RULES
	ranlib THELIB

# SUFFIX_RULES

.c.a:
	$(CC) $(CFLAGS) -I$(II) $<
	ar rv $@ *.o
	rm -f $*.o

.f.a:
	$(FTN) -c $(FFLAGS) $<
	ar rv $@ *.o
	rm -f $*.o

# BLOCKEND


# ----- for SunOS from 5.2 to 5.7  (Solaris 2.2 to 2.7) -- #
OS_ID SunOS 5200 5700

# ASSIGMENTS

FFLAGS = -O3 -u -Nl100
FTN = f77 
CFLAGS = -g -c
CC = cc

# EXPLICIT_RULES
	ranlib THELIB

# SUFFIX_RULES

.c.a:
	$(CC) $(CFLAGS) -I$(II) $<
	ar rv $@ *.o
	rm -f $*.o

.f.a:
	$(FTN) -c $(FFLAGS) $<
	ar rv $@ *.o
	rm -f $*.o

# BLOCKEND


# ------- for DECs ------------------------------------- #
# GCM:      ULTRIX tonga 4.2 0 RISC 
# Technion: ULTRIX cvgeo 4.3 0 RISC
# ERL:      OSF1 chandon V4.0 464 alpha  
# ANU:      OSF1 xanadu V3.2 214.61 alpha
     
OS_ID ULTRIX 4200 4300

# ASSIGMENTS

FFLAGS = -O3 -assume byterecl 
FTN = f77 
CFLAGS = -c
CC = cc

# EXPLICIT_RULES 
	ranlib THELIB

# SUFFIX_RULES
.c.a:
	$(CC) $(CFLAGS) -I$(II) $<
	ar rv $@ $*.o
	rm -f $*.o

.f.a:
	$(FTN) -c $(FFLAGS) $<
	ar rv $@ $*.o
	rm -f $*.o

# BLOCKEND


OS_ID OSF1 2000 4000

# ASSIGMENTS

FFLAGS = -O5 -assume byterecl
FTN = f77 
CFLAGS = -c
CC = cc

MATHLIB = /usr/include/math.h

# EXPLICIT_RULES
	ar rv $@ *.o

# SUFFIX_RULES

.c.o:
	$(CC) $(CFLAGS) $(MATHLIB) -I$(II) $<

.f.o:
	$(FTN) -c $(FFLAGS) $<

# BLOCKEND     
                                            

# ----- for Linux from 0.0.1 to 3.0.0  -- #
OS_ID Linux 0001 3000

# ASSIGMENTS

FFLAGS = -O3 -Wuninitialized -Wunused -Wimplicit -fno-f2c -ffast-math -fno-automatic -fno-backslash -Wno-globals -fno-globals
FTN = g77 
CFLAGS = -g -c
CC = gcc

# EXPLICIT_RULES
	ranlib THELIB

# SUFFIX_RULES

.c.a:
	$(CC) $(CFLAGS) -I$(II) $<
	ar rv $@ *.o
	rm -f $*.o

.f.a:
	$(FTN) -c $(FFLAGS) $<
	ar rv $@ *.o
	rm -f $*.o

# BLOCKEND
  
# ----- for PC Solaris from 5.2 to 5.7 (Solaris 2.2 to 2.7)  -- #
OS_ID PCSol 5200 5700

# ASSIGMENTS

FFLAGS = -O3 -Wuninitialized -Wunused -Wimplicit -fno-f2c -ffast-math -fno-automatic -fno-backslash -Wno-globals -fno-globals
FTN = g77 
CFLAGS = -g -c
CC = gcc

# EXPLICIT_RULES
	ranlib THELIB

# SUFFIX_RULES

.c.a:
	$(CC) $(CFLAGS) -I$(II) $<
	ar rv $@ *.o
	rm -f $*.o

.f.a:
	$(FTN) -c $(FFLAGS) $<
	ar rv $@ *.o
	rm -f $*.o

# BLOCKEND
  
# ------- for IRIX  ------------------------ #     
OS_ID IRIX64 6400 6600
 
# ASSIGMENTS
 
FFLAGS = -u
FTN = f77
CFLAGS = -c
CC = cc
 
# EXPLICIT_RULES

 
# SUFFIX_RULES
 
.c.a::
        $(CC) : $(CFLAGS) -I$(II) $<
        ar rv  $@ $*.o 
        rm -f $*.o

.f.a::
        $(FTN) :  -c $(FFLAGS) $<
        ar rv $@ $*.o 
        rm -f $*.o

# BLOCKEND


# ------- for IBM ------------------------------ #
#Technion: AIX cviva 2 3 000050064900
OS_ID AIX 2000 2000

# The following is untested.

# ASSIGMENTS

FFLAGS = -O5
FTN = f77 
CFLAGS = -c
CC = cc

MATHLIB = /usr/include/math.h

# EXPLICIT_RULES
# (unknown yet)

# SUFFIX_RULES

.c.a:
	$(CC) $(CFLAGS) $(MATHLIB) $<
	ar rv $@ *.o
	rm -f $*.o

.f.a:
	$(FTN) -c $(FFLAGS) $<
	ar rv $@ *.o
	rm -f $*.o

# BLOCKEND
        

