#!/bin/csh -f
#
#doc Plot orbit difference or residual files generated by ORBFIT and ORBFIT
#doc
#
# Plot plt files created by ORBFIT or ORBDIF " 
#
# Usage: sh_plotorb -e [ext] -s [nn] -a [arcout] -r [rms] -g [ga_res]"
# 
#   Where: [ext] is the extent and [nn] the PRN number in the name of the input files plt_[ext].[nn] "
#          [arcout] is optional arcout file for identifying eclisping satellites"  
#          [rms] optional name of .rms file (either gamit or ga ) 
#          [ga_res] is optional GA pod orbdiff format residual file "
#     
#   If nn = all, plot all the files"    
#   
# End Help
# By Peng Fang , SIO, UCSD, Dec. 3, 92
# Modified by Simon Mcclusky Nov. 22 93, June 30 94, May 03 95.   
# Modified by Mike Floyd Oct 2017, to plots lines instead of bars, and work for GMT5
#                          
if ($#argv < 1) then
        sed -e "1d" -e "/End Help/q" -e "s/#//" $0
        exit
endif

# initialize variables
set ext = ""        
set svs = ""
set arcout = "N"
set rms = "N"
set ga_res = 'N'

# override with user input options 
foreach a ($argv)
switch($a)
  case -s:
      set svs = (`echo $argv | cut -d- -f2`); shift svs
      breaksw
  case -e:
     set ext = $argv[2]
     set file_ext = '_'$ext     
     breaksw
  case -a: 
     set arcout = $argv[2] 
     \rm -r tmp.info > /dev/null
     touch tmp.info   
     breaksw 
  case -r
     set rms = $argv[2]
     \rm -r tmp.rms > /dev/null
     touch tmp.rms 
     breaksw 
  case -g
     set ga_res = $argv[2]
     \rm -r tmp.rms > /dev/null
     touch tmp.rms 
     set file_ext = `echo $ga_res | awk -F. '{print "_"$1}'`      
     breaksw 
  endsw
shift
end                     
#
echo 'Output files will be prn??'$file_ext'.*'

\rm -r prn_allsvs${file_ext}.ps >& /dev/null

set eclipse = ''
if ($arcout != 'N') then
   set eclipse = `grep -i "Eclipse interval"  $arcout | awk '{printf "%02d \n",$2}' | sort -n | uniq`
   echo "Eclipsing Satellites: $eclipse"
   grep "#orb" $arcout | awk '{print $2,$9,$10,$12,$13,$14,$15,$19}' >! orbinfo.txt
endif

if ( $ga_res != 'N' ) then
   set eclipse = `cat $ga_res | awk '{ if ($4 < 1.0 ) {printf "%02d \n", $2 }}' | sort -n | uniq` 
   echo "Eclipsing Satellites: $eclipse"
   set prns = `cat $ga_res | awk '{printf "%02d \n", $2 }' | sort -n | uniq`
   set num = 0
   set max_r = 0.0
   set max_t = 0.0
   set max_n = 0.0  
   foreach i (${prns})
      echo "Extracting PRN: $i"
      cat $ga_res | awk -vprn=$i '{ if ($2 == prn ) {print $1,$11,$12,$13 }}' | awk '{print $1,NR,$2,$3,$4 }' >! tmp.${i}
      set num = `wc -l tmp.$i | awk '{print $1}'`
      set max_r = `cat tmp.$i | awk 'BEGIN {max = 0} {if (sqrt(($3)**2) > max) max=sqrt(($3)**2)} END {printf "%7.3f \n", max+0.01}'`
      set max_t = `cat tmp.$i | awk 'BEGIN {max = 0} {if (sqrt(($4)**2) > max) max=sqrt(($4)**2)} END {printf "%7.3f \n", max+0.01}'`
      set max_n = `cat tmp.$i | awk 'BEGIN {max = 0} {if (sqrt(($5)**2) > max) max=sqrt(($5)**2)} END {printf "%7.3f \n", max+0.01}'`
      echo "D-radial (m)" >! plt${file_ext}.$i
      echo "D-along (m)"  >> plt${file_ext}.$i
      echo "D-cross (m)"  >> plt${file_ext}.$i
      echo "Number epochs (Time Interval= 15.00 min)"   >> plt${file_ext}.$i
      echo $num    | awk '{printf "  %d \n",$1}'        >> plt${file_ext}.$i
      echo $max_r  | awk '{printf "  %6.3f \n",$1}'     >> plt${file_ext}.$i
      echo $max_t  | awk '{printf "  %6.3f \n",$1}'     >> plt${file_ext}.$i
      echo $max_n  | awk '{printf "  %6.3f \n",$1}'     >> plt${file_ext}.$i
      cat tmp.${i} | awk '{printf "  %d %10.4f %10.4f %10.4f \n ",$2,$3,$4,$5}' >> plt${file_ext}.${i}
    end
\rm -r tmp.??     
endif 

gmt makecpt -T1/32/1 > sv.cpt
set limi1max = ` tail -n +9  plt$file_ext.??  | grep -v "==>" | awk 'NF > 3 {print $1,$2,0.01}' | gmt gmtinfo -I1/0.01 -Sy`
set limi2max = ` tail -n +9  plt$file_ext.??  | grep -v "==>" | awk 'NF > 3 {print $1,$3,0.01}' | gmt gmtinfo -I1/0.01 -Sy`
set limi3max = ` tail -n +9  plt$file_ext.??  | grep -v "==>" | awk 'NF > 3 {print $1,$4,0.01}' | gmt gmtinfo -I1/0.01 -Sy`
set first = 'Y'

foreach pltf (plt$file_ext.??)
   
  set eclipsing = ''

  if ($svs[1] != "all" ) then
    set num = `echo $pltf | awk '{print substr($1,length($1)-1,length($1))}'`
    foreach i ($svs)
      if ($i == $num) goto skip
    end
    goto next
  endif

skip:

#----------------------------------------------------------
#  prepare the plot file
#----------------------------------------------------------

set num = `echo $pltf | awk -v FS='.' '{print substr($2,1,2)}'`
if ( $rms != "N" ) then
  if ( ${ga_res} == "N" ) then 
     cat ${rms} | awk -vnum=$num '{if (substr($0,1,1) == " " &&  $1 == num ) {print $1,$6,$7,$8,$9}}' >> tmp.rms
  else
     echo $rms
     cat ${rms} | grep "RMS-RTN ICRF CMP" | awk -vnum=$num '{if (substr($4,2,2) == num ) {print substr($4,2,2),$5,$6,$7,sqrt($5**2+$6**2+$7**2)}}' >> tmp.rms
  endif
endif

foreach e ( ${eclipse} )
  if ( $e == $num) then
    set eclipsing = 'Eclipsing'
    echo "PRN # $num Eclipsing"    
  endif
end

if ($arcout != 'N') then
set tmpinfo = `cat orbinfo.txt | awk -vnum=$num '{ if ( $2 == num) {print $1,"- PRN: G"$2", SVN: "$3", BLOCK: "$4", Mass: "$5", AntPwr: "$6", Beta: "$7", Plane: "$8}}'`
#echo $tmpinfo
endif

awk -vprn=$num '{if (NR > 8 && NF >= 4) {print $1,$2,0.01,prn}}' $pltf >! tmpx
awk -vprn=$num '{if (NR > 8 && NF >= 4) {print $1,$3,0.01,prn}}' $pltf >! tmpy
awk -vprn=$num '{if (NR > 8 && NF >= 4) {print $1,$4,0.01,prn}}' $pltf >! tmpz

set ylab1 = `head -n 1 $pltf`
set ylabt = `head -n 1 $pltf | awk ' {print $1}'`
set ylab2 = `head -n 2 $pltf | tail -n -1`
set ylab3 = `head -n 3 $pltf | tail -n -1`
set xlab = `head -n 4 $pltf | tail -n -1`
set xmax = `head -n 5 $pltf | tail -n -1`
set ymax1 = `head -n 6 $pltf | tail -n -1`
set ymax2 = `head -n 7 $pltf | tail -n -1`
set ymax3 = `head -n 8 $pltf | tail -n -1`

set file1 = tmpx
set file2 = tmpy
set file3 = tmpz
set testt = "V-X "

#echo  "testt $testt  "
#echo  "ylabt $ylabt  "

if ( $ylabt == $testt ) then
gmt pstext -Jx1i -R0/1/0/1 -F+f+a+j -K -N << eof >! prn$num$file_ext.ps 
4.7 6.8 20,1 0.0 6 Instantaneous Orbit Velocities for Satellite PRN $num $eclipsing
0.25 5.5 16,1 90.0 6 $ylab1
0.25 3.4 16,1 90.0 6 $ylab2
0.25 1.3 16,1 90.0 6 $ylab3
4.7 0 14,1 0.0 6 $xlab   
0.5 -0.5 12,1 0.0 6 $extmore 
eof 
#5 -0.25 12,1 0.0 6 $tmpinfo
else 
gmt pstext -Jx1i -R0/1/0/1 -F+f+a+j -K -N << eof >! prn$num$file_ext.ps 
4.7 6.8 20,1 0.0 6  Orbit Positional Differences for Satellite PRN $num $eclipsing
0.25 5.5 16,1 90.0 6 $ylab1
0.25 3.4 16,1 90.0 6 $ylab2
0.25 1.3 16,1 90.0 6 $ylab3
4.7 0 14,1 0.0 6 $xlab
0.5 -0.5 12,1 0.0 6 $ext
eof
#5 -0.25 12,1 0.0 6 $tmpinfo
endif 

if ( ! -e prn_allsvs${file_ext}.ps ) \cp prn$num$file_ext.ps prn_allsvs${file_ext}.ps

echo " plotting prn$num$file_ext.ps "                                                                                                    

#----------------------------------------------------------
#  set extremes
#----------------------------------------------------------
#echo " ymax1 $ymax1 ymax2 $ymax2 ymax3 $ymax3 "
set xmin = 0
#@ xmax = $xmax + 1  

set ymax1 = `echo $ymax1 | awk '{print ($1 + 0.1)}'` 
set ymax2 = `echo $ymax2 | awk '{print ($1 + 0.1)}'` 
set ymax3 = `echo $ymax3 | awk '{print ($1 + 0.1)}'`     

#echo " ymax1 $ymax1 ymax2 $ymax2 ymax3 $ymax3 "
 
set ymin1 = -$ymax1
set ymax1 = $ymax1 
set ymin2 = -$ymax2
set ymax2 = $ymax2
set ymin3 = -$ymax3
set ymax3 = $ymax3


set xlength = 8.5
set ylength = 1.8


#set scal1 = `echo $xmin $xmax $xlength $ymin1 $ymax1 $ylength`
#set scal1 = `echo $scal1 | awk '{xscl = $3 / ( $2 - $1); yscl = $6 / ( $5 - $4 ); print "-Jx"xscl"i/"yscl"i"}'`
set scal1 = -JX8.5i/1.8i
#set scal2 = `echo $xmin $xmax $xlength $ymin2 $ymax2 $ylength`
#set scal2 = `echo $scal2 | awk '{xscl = $3 / ( $2 - $1); yscl = $6 / ( $5 - $4 ); print "-Jx"xscl"i/"yscl"i"}'`
set scal2 = -JX8.5i/1.8i
#set scal3 = `echo $xmin $xmax $xlength $ymin3 $ymax3 $ylength`
#set scal3 = `echo $scal3 | awk '{xscl = $3 / ( $2 - $1); yscl = $6 / ( $5 - $4 ); print "-Jx"xscl"i/"yscl"i"}'`
set scal3 = -JX8.5i/1.8i

#set limi1 = '-R'$xmin/$xmax/$ymin1/$ymax1
#set limi2 = '-R'$xmin/$xmax/$ymin2/$ymax2
#set limi3 = '-R'$xmin/$xmax/$ymin3/$ymax3

set limi1 = ` tail -n +4  $file1  | gmt gmtinfo -I1/0.01 -Sy`
set limi2 = ` tail -n +4  $file2  | gmt gmtinfo -I1/0.01 -Sy`
set limi3 = ` tail -n +4  $file3  | gmt gmtinfo -I1/0.01 -Sy`
#echo $limi1 $limi2 $limi3
#echo -n "xmax $xmax"
#set ent = $<

	     set xspread = `echo  $xmax  $xmin | awk '{ printf "%6d",  $1 - $2}'`
             set xanot = 5
	     if ( $xspread < 50 )  set xanot  = 2
	     if ( $xspread > 70 )  set xanot  = 10
	     if ( $xspread > 100 ) set xanot  = 10
	     if ( $xspread > 200)  set xanot  = 10
	     if ( $xspread > 300)  set xanot  = 20
	     if ( $xspread > 500)  set xanot  = 40
	     set  xframe = ` echo $xanot | awk '{print $1 / 2 }'`     

	     set yspread = `echo  $ymax1  $ymin1 | awk '{ printf "%8.2f",  $1*100 - $2*100}'` 
        set yanot1 = `echo $yspread | awk '{ printf "%8.2f", ($1/5)/100}'`
	     set  yframe1 = ` echo $yanot1 | awk '{print $1 / 2 }'`

	     set yspread = `echo  $ymax2  $ymin2 | awk '{ printf "%8.2f",  $1*100 - $2*100}'`
        set yanot2 = `echo $yspread | awk '{ printf "%8.2f", ($1/5)/100}'`
	     set  yframe2 = ` echo $yanot2 | awk '{print $1 / 2 }'`

	     set yspread = `echo  $ymax3  $ymin3 | awk '{ printf "%8.2f",  $1*100 - $2*100}'`
        set yanot3 = `echo $yspread | awk '{ printf "%8.2f", ($1/5)/100}'`
	     set  yframe3 = ` echo $yanot3 | awk '{print $1 / 2 }'`

#        set framn = "-Bxa${xanot}f$xframe -Bya${yanot1}f$yframe1 -BWesn"
#        set framo = "-Bxa${xanot}f$xframe -Bya${yanot2}f$yframe2 -BWesn"   
#        set frame = "-Bxa${xanot}f$xframe -Bya${yanot3}f$yframe3 -BWeSn"

        set framn = "-Baf -BsWnE"
        set framo = "-Baf -BsWnE"
        set frame = "-Baf -BSWnE"
	
#----------------------------------------------------------
#  prepare headers
#----------------------------------------------------------
echo "> -Z${num}" >! $file1.tmp
tail -n +4 $file1  >> $file1.tmp
echo "> -Z${num}" >! $file2.tmp
tail -n +4 $file2  >> $file2.tmp
echo "> -Z${num}" >! $file3.tmp
tail -n +4 $file3  >> $file3.tmp

#gmt psxy $file1.tmp $framn $limi1 $scal1 -Sb.01i -X0.7i -Y4.60i  -O -K >> prn$num$file_ext.ps
gmt psxy $file1.tmp $framn $limi1 $scal1 -W0.5p+s -X1i -Y4.60i -O -K >> prn$num$file_ext.ps
#gmt psxy $file2.tmp $framo $limi2 $scal2 -Sb.01i       -Y-2.1i  -O -K >> prn$num$file_ext.ps
gmt psxy $file2.tmp $framo $limi2 $scal2 -W0.5p+s      -Y-2.1i -O -K >> prn$num$file_ext.ps
#gmt psxy $file3.tmp $frame $limi3 $scal3 -Sb.01i       -Y-2.1i  -O    >> prn$num$file_ext.ps

if ($arcout != 'N') then

gmt psxy $file3.tmp $frame $limi3 $scal3 -W0.5p+s      -Y-2.1i -O -K >> prn$num$file_ext.ps
gmt pstext -Jx1i -R0/1/0/1 -F+f+a+j -O -N << eof >> prn$num$file_ext.ps 
4.25 -0.7 12,1 0.0 6 $tmpinfo
eof

else
gmt psxy $file3.tmp $frame $limi3 $scal3 -W0.5p+s      -Y-2.1i -O  >> prn$num$file_ext.ps
endif
  
if ($first == "Y") then
  if ( $eclipsing != "Eclipsing" ) then
    gmt psxy $file1.tmp $frame $limi1max $scal1 -W0.7p+cl+s -Csv.cpt -X1i   -Y4.60i -O -K >> prn_allsvs${file_ext}.ps
    gmt psxy $file2.tmp $frame $limi2max $scal2 -W0.7p+cl+s -Csv.cpt        -Y-2.1i -O -K >> prn_allsvs${file_ext}.ps
    gmt psxy $file3.tmp $frame $limi3max $scal3 -W0.7p+cl+s -Csv.cpt        -Y-2.1i -O -K >> prn_allsvs${file_ext}.ps
  else
    gmt psxy $file1.tmp $frame $limi1max $scal1 -W2p+cl+s -Csv.cpt -X1i   -Y4.60i -O -K >> prn_allsvs${file_ext}.ps
    gmt psxy $file2.tmp $frame $limi2max $scal2 -W2p+cl+s -Csv.cpt        -Y-2.1i -O -K >> prn_allsvs${file_ext}.ps
    gmt psxy $file3.tmp $frame $limi3max $scal3 -W2p+cl+s -Csv.cpt        -Y-2.1i -O -K >> prn_allsvs${file_ext}.ps
  endif
else
  if ( $eclipsing != "Eclipsing" ) then
    gmt psxy $file1.tmp  $limi1max $scal1 -Csv.cpt -W0.7p+cl+s -Y4.2i  -O -K >> prn_allsvs${file_ext}.ps
    gmt psxy $file2.tmp  $limi2max $scal2 -Csv.cpt -W0.7p+cl+s -Y-2.1i -O -K >> prn_allsvs${file_ext}.ps
    gmt psxy $file3.tmp  $limi3max $scal3 -Csv.cpt -W0.7p+cl+s -Y-2.1i -O -K >> prn_allsvs${file_ext}.ps  
  else
    gmt psxy $file1.tmp  $limi1max $scal1 -Csv.cpt -W2p+cl+s -Y4.2i  -O -K >> prn_allsvs${file_ext}.ps
    gmt psxy $file2.tmp  $limi2max $scal2 -Csv.cpt -W2p+cl+s -Y-2.1i -O -K >> prn_allsvs${file_ext}.ps
    gmt psxy $file3.tmp  $limi3max $scal3 -Csv.cpt -W2p+cl+s -Y-2.1i -O -K >> prn_allsvs${file_ext}.ps
  endif
endif

if ( $rms != N ) then
  set radirange = `gmt gmtinfo -I1/0.01 -C tmp.rms | awk '{print "-R"$1"/"$2"/"$3"/"$4}'`
  set alonrange = `gmt gmtinfo -I1/0.01 -C tmp.rms | awk '{print "-R"$1-1"/"$2+1"/"$5"/"$6}'`
  set crosrange = `gmt gmtinfo -I1/0.01 -C tmp.rms | awk '{print "-R"$1"/"$2"/"$7"/"$8}'`
  set totlrange = `gmt gmtinfo -I1/0.01 -C tmp.rms | awk '{print "-R"$1"/"$2"/"$9"/"$10}'`
  
  cat tmp.rms | awk '{print $1,$2}' >! tmp.radi
  cat tmp.rms | awk '{print $1,$3}' >! tmp.alon
  cat tmp.rms | awk '{print $1,$4}' >! tmp.cros
  cat tmp.rms | awk '{print $1,$5}' >! tmp.totl
  set brange = `gmt gmtinfo -I1/0.01 -C tmp.radi tmp.alon tmp.cros tmp.totl | awk '{print "-R"$1-1"/"$2+1"/"$3"/"$4}'` 

  gmt psxy tmp.alon -JX22/5 $brange -Sb0.14 -W0/255/0  -G0/255/0 -X5    -Y5 -Bafg -BSnWe+t"${ext} orbit fit RMS (rd=radial, gn=along, bl=cross bk=3D" -Bx+l"PRN #" -By+l" RMS [m]" -K    >! ${rms}.ps
  gmt psxy tmp.radi -JX22/5 $brange -Sb0.14 -W255/0/0  -G255/0/0 -X-0.14           -K -O >> ${rms}.ps
  gmt psxy tmp.cros -JX22/5 $brange -Sb0.14 -W0/0/255  -G0/0/255 -X0.28            -K -O >> ${rms}.ps
  gmt psxy tmp.totl -JX22/5 $brange -Sb0.14 -W0/0/0    -G0/0/0   -X0.14               -O >> ${rms}.ps
endif


#----------------------------------------------------------
#  view the plot
#----------------------------------------------------------

# gs prn$num.ps &

set first = 'N'

next: 

end   

gmt psscale -Csv.cpt -Dx3c/-2c+w15c/0.25c+jBL+h -Bxaf+l"PRN"  -O >> prn_allsvs${file_ext}.ps

#----------------------------------------------------------
# view and print insrtuctions
#----------------------------------------------------------
echo "  "
echo " To view orbit comparison plots on screen use: " 
echo "  "
echo " gs prn*"$file_ext".ps "
echo "  "
echo " To send orbit comparison plots to printer use: " 
echo "  "
echo " lpr -s prn*"$file_ext".ps "
echo "  "


