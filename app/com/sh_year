#!/bin/csh -f 
#
#doc Convert year in any given format to 1, 2 and 4 char year
#doc
#
######################## INSTRUCTIONS #############################
# See if arguments passed
if( $#argv == 0 ) then
  echo "===================================================================================="
  echo " Convert year to 1, 2 and 4 char year  " 
  echo "  "
  echo " Usage: sh_year -year <year> "
  echo "  "
  echo "        <year>  is the year you want converted to 1, 2, 4 char."
  echo "  "      
  echo " Assumptions: Given input year which is < 60  --> yr4 = 2000 + year "      
  echo "              Given input year which is >= 60 --> yr4 = 1900 + year "      
  echo "  "      
  echo " Examples: sh_year -year   01 "
  echo "           sh_year -year 1999 "
  echo "  "
  echo "===================================================================================="
  exit
endif 

##################### SET UP DEFAULTS #############################   
# Setup necessary paths and filenames
set year = ''
set yr1 = ''
set yr2 = ''
set yr4 = ''
##################### DECIPHER COMMAND LINE #######################   
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
    case -y*:
      set year = `echo $input[2] | awk '{printf "%d",$1}'`
    breaksw 
  endsw
  if ( $#argv > 0 ) shift argv
end
alldone:
##################### GET THE JOB DONE ############################
if ( $year == '' || $year >= 3000 || $year < 0 ) then
  echo "Not a valid year input: $year" 
  exit
endif
if ( $year >= 100 ) then
  set yr4 = `echo $year | awk '{printf " %04d \n", $1}'`
  set yr2 = `echo $yr4  | awk '{printf " %02d \n", substr($1,3,2)}'` 
  set yr1 = `echo $yr4  | awk '{printf " %01d \n", substr($1,4,1)}'`
else if ( $year >= 60 ) then
  set yr4 = `echo $year | awk '{printf " %04d \n", $1+1900}'`
  set yr2 = `echo $yr4   | awk '{printf " %02d \n", substr($1,3,2)}'`
  set yr1 = `echo $yr4  | awk '{printf " %01d \n", substr($1,4,1)}'`
else if ( $year < 60 ) then
  set yr4 = `echo $year | awk '{printf " %04d \n", $1+2000}'`
  set yr2 = `echo $yr4   | awk '{printf " %02d \n", substr($1,3,2)}'`
  set yr1 = `echo $yr4  | awk '{printf " %01d \n", substr($1,4,1)}'`
endif
#
# Echo the output year in 1, 2, 4 char
echo $yr4 $yr2 $yr1
exit
