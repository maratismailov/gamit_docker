#!/bin/csh -f
#
#doc Setup and run PBS batch files for glred.
#doc
#
# Last modified 2004/12/30 by S. McClusky
######################## INSTRUCTIONS #############################
# See if arguments passed
if( $#argv == 0 ) then
  echo "==========================================================================================="
  echo " Setup and run PBS batch files for glred on remote host" 
  echo " "
  echo "   Usage: sh_PBS_glred -f <command file> -q <queue name> -nodes <node_att> -sleep <time>"
  echo " "           
  echo "   Executed from the working directory"
  echo " "
  echo "   Optional commands:" 
  echo " "     
  echo "     <command file> Command file containing glred command line run strings "
  echo "                    First column is comment, glred command lines must start in col 2)"
  echo "     <queue name>   PBS queue to submit jobs to [Default: one]"
  echo "     <node_att>     Node attributes [Default 1:gigabit]"
  echo "     <time>         Seconds to sleep between launching jobs to the cluster queue [Default 3]" 
  echo "      -no_qsub      Setup batch files but do not submit them to the PBS queue."
  echo " "      
  echo "   Example: sh_PBS_glred -f sh_glred.cmd -q one"      
  echo " "      
  echo "==========================================================================================="
  exit
endif 
##################### SET UP DEFAULTS #############################   
set file = ''
set queue = 'one'
set nodes = '1:gigabit:ppn=2'
set mailto = `whoami`
set machine = `hostname`
set sleep = 3
set qsub =  'Y'
##################### DECIPHER COMMAND LINE #######################
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
    case -f*:
      set file  = $input[2]  
    breaksw 
        case -q*:
      set queue  = $input[2]  
    breaksw 
    case -nod*:
      set nodes  = $input[2]  
    breaksw 
    case -sl*:
      set sleep = $input[2]  
    breaksw 
    case -no_qsub:
      set qsub  = N  
    breaksw 
  endsw
  if ( $#argv > 0 ) shift argv
end
alldone:
##################### GET THE JOB DONE ############################         

echo "EXECUTING sh_PBS_glred"

# Check all required info given.
if ( ${file} == '' ) then
  echo "Not all required fields given -- file: $file --Stop"
  exit
endif

# Setup and launch PBS batch files to the specified PBS queue. 
#
@ i = 0

# Loop over lines given in the .cmd file
set j = `cat $file | awk 'substr($0,1,1) == " " {print $0}' | wc -l` 
cat $file | awk 'substr($0,1,1) == " " {print $0}' >! ${file}.input
while ( $j > 0 )
  @ i = $i + 1
  @ j = $j - 1
  
# Set timestamp hostname variable
  set ts = "`date +"%y_%m_%d_%H:%M:%S"`"
  echo 1 | awk '{print "#\!/bin/csh"}' >! glred_batch.${i}.${ts}
  echo "# " >> glred_batch.${i}.${ts}
  echo "#PBS -N glred_batch.${i}.${ts} " >> glred_batch.${i}.${ts}
  echo '# ' >> glred_batch.${i}.${ts}
  echo "#PBS -l nodes=${nodes} " >> glred_batch.${i}.${ts}
  echo "# " >> glred_batch.${i}.${ts}
  echo "#PBS -q $queue " >> glred_batch.${i}.${ts}
  echo "# " >> glred_batch.${i}.${ts}
# MOD TAH 090911: Removed e from -mea option
  echo "#PBS -ma " >> glred_batch.${i}.${ts}
  echo "# " >> glred_batch.${i}.${ts}
  echo "#PBS -r n " >> glred_batch.${i}.${ts}
  echo "# " >> glred_batch.${i}.${ts}
  echo "#PBS -V  " >> glred_batch.${i}.${ts}
  echo "# " >> glred_batch.${i}.${ts}
  echo "# ------------------------------------------------------------ " >> glred_batch.${i}.${ts}
  echo "# Log interesting information " >> glred_batch.${i}.${ts}
  echo "# " >> glred_batch.${i}.${ts}
  echo 'echo " " ' >> glred_batch.${i}.${ts}
  echo 'echo "-------------------" ' >> glred_batch.${i}.${ts}
  echo 'echo "This is a $PBS_ENVIRONMENT job" ' >> glred_batch.${i}.${ts}
  echo 'echo "This job was submitted to the queue: $PBS_QUEUE" ' >> glred_batch.${i}.${ts}
  echo 'echo "The job id is: $PBS_JOBID" ' >> glred_batch.${i}.${ts}
  echo 'echo "-------------------" ' >> glred_batch.${i}.${ts}
  echo 'echo "The master node of this job is: $PBS_O_HOST" ' >> glred_batch.${i}.${ts}
  echo ' ' >> glred_batch.${i}.${ts}
  echo 'set NPROCS = `wc -l < $PBS_NODEFILE` ' >> glred_batch.${i}.${ts}
  echo ' ' >> glred_batch.${i}.${ts}
  echo 'set NNODES = `uniq $PBS_NODEFILE | wc -l` ' >> glred_batch.${i}.${ts}
  echo ' ' >> glred_batch.${i}.${ts}
  echo 'echo "This job is using $NPROCS CPU(s) on the following $NNODES node(s):" ' >> glred_batch.${i}.${ts}
  echo 'echo "-----------------------" ' >> glred_batch.${i}.${ts}
  echo 'uniq $PBS_NODEFILE | sort ' >> glred_batch.${i}.${ts} 
  echo 'echo "-----------------------" ' >> glred_batch.${i}.${ts}
  echo ' ' >> glred_batch.${i}.${ts}
  echo '# ------------------------------------------------------------ ' >> glred_batch.${i}.${ts}
  echo '# Setup execution variables ' >> glred_batch.${i}.${ts}
  echo ' ' >> glred_batch.${i}.${ts}
  echo "#PBS -o sh_glred.out.${i} " >> glred_batch.${i}.${ts}
  echo "#PBS -e sh_glred.err.${i} " >> glred_batch.${i}.${ts}
  echo ' ' >> glred_batch.${i}.${ts}
  echo 'echo The PBS working directory is $PBS_O_WORKDIR  ' >> glred_batch.${i}.${ts}
  echo ' ' >> glred_batch.${i}.${ts}
  set cmd = `head -n ${i} ${file}.input | tail -n -1`

# Get to the remote processing scratch area and execute the job

  echo 'cd $PBS_O_WORKDIR ' >> glred_batch.${i}.${ts}
  
  echo 'echo -n 'Started processing at : ' ; date ' >> glred_batch.${i}.${ts}

  echo "time $cmd" >> glred_batch.${i}.${ts}
 
  echo 'echo -n 'Ended processing at  : ' ; date ' >> glred_batch.${i}.${ts}
  
#
# Lanuch the batch files jobs into the PBS queue 
#  
  if ( $qsub ==  'Y' ) then 
    echo "Launching: glred_batch.${i}.${ts} : Batch job ID given below"
#   MOD TAH 100917: Make sure qsub launches OK
#    qsub glred_batch.${i}.${ts}
    set subOK = 1 ; set numOK = 0
    while ( $subOK != 0 )
       @ numOK++
# MOD TAH 101208: Added -M mailto option
       echo qsub -M ${mailto} glred_batch.${i}.${ts}
       qsub -M ${mailto} glred_batch.${i}.${ts} || sleep 30s
    end
# ORIGINAL code
    echo "Launched : glred_batch.${i}.${ts} : After $numOK tries"
    sleep ${sleep}
  endif
  
# End loop on commands  
end
