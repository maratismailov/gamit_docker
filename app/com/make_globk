#!/bin/csh -ef
if ($#argv == 0) then
   echo ' '
   echo ' Create executables from the source code for GLOBK programs '
   echo ' '
   echo '    - call script unimake to update machine-dependent Makefiles '
   echo "    - execute 'make' to compile and link the subroutines"
   echo '    - recreate the links in the kf bin directory ' 
   echo ' '
   echo ' Useage:'
   echo ' '
   echo '   make_globk [target_dir] [compiler]  '
   echo ' '
   echo '      where [target_dir] is the absolute path to the directory above /kf'
   echo '            [compiler] is an optional entry specifying a compiler other '
   echo '                       than the default f77 compiler you want to use'
   echo ' '
   echo ' Example:'
   echo ' '
   echo '   make_globk /home/me/stdrel '
   echo '   OR'
   echo '   make_globk /home/me/stdrel g77 '
   echo ' '
   exit
else

#
# Script to make the GLOBK programs under kf. 
# T. Herring.   Last modified by R. King 960920
     
# Augment the path to point to target-directory com for new installations
 set path = ($path $1/com)
 
# remember the target working directory  
set TARGETDIR = $1/kf    
set COMPILER = 'default'
if ( $#argv > 1 ) then
  set COMPILER = $2
  echo "Using the specified compiler: " $COMPILER 
endif

echo ' '
echo ++++++++++++++++++++++++++++++
echo Making the GLOBK software 
echo ++++++++++++++++++++++++++++++
echo ' '     

# first make (or check) the common libraries
echo ++++++++++++++++++++++++++++++++++++++++++
echo Make sure the common libraries are current
echo ++++++++++++++++++++++++++++++++++++++++++
echo " "
cd $TARGETDIR
cd ../libraries
unimake -m comlib -c $COMPILER  
if( $status != 0 ) then
  echo "Failure in unimake for libraries/comlib -- make_globk terminated"   
  exit 1
endif
cd comlib; make 
if( $status != 0 ) then
   echo "Failure in make for libraries/comlib -- make_globk terminated"   
   exit 1
endif
#     need to erase object files on some systems (e.g., DEC OSF4) when it
#     can't be done within the Makefile.  This expression avoids 'No match' to screen.
#---but it doesn't work because an error is still generated and the process stops 
# \rm -f *.o | & egrep -v match > ! tmp.rm    
# try the following (clumsy):
touch tmp.o; \rm -f *.o
cd ../  
unimake -m matrix -c $COMPILER 
if( $status != 0 ) then
  echo "Failure in unimake for libraries/matrix -- make_globk terminated"   
  exit 1
endif
cd matrix; make
if( $status != 0 ) then
   echo "Failure in make for libraries/matrix -- make_globk terminated"   
   exit 1
endif

touch tmp.o; \rm -f *.o

# make the kf libraries    

echo ' '
echo ++++++++++++++++++++++++++++++++++
echo Making the Kalman filter libraries
echo ++++++++++++++++++++++++++++++++++
echo " "

cd $TARGETDIR  
unimake -m gen_util -c $COMPILER   
if( $status != 0 ) then
   echo "Failure in unimake for kf/gen_util -- make_globk terminated"   
   exit 1
endif   
# 
cd gen_util; make
if( $status != 0 ) then
   echo "Failure in make for kf/gen_util -- make_globk terminated"   
   exit 1
endif
  
touch tmp.o; \rm -f *.o
echo Made gen_util 

cd $TARGETDIR  
unimake -m Khandlers -c $COMPILER 
if( $status != 0 ) then
   echo "Failure in unimake for kf/Khandlers -- make_globk terminated"   
   exit 1
endif   
#
cd Khandlers; make
if( $status != 0 ) then
   echo "Failure in make for kf/Khandlers -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made Khandlers 

cd $TARGETDIR  
unimake -m Ghandlers -c $COMPILER 
if( $status != 0 ) then
   echo "Failure in unimake for kf/Ghandlers -- make_globk terminated"   
   exit 1
endif   

cd Ghandlers; make
if( $status != 0 ) then
   echo "Failure in make for kf/Ghandlers -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o  
echo Made Ghandlers 


echo " "
echo ++++++++++++++++++++++++++++++++++
echo Making the Kalman filter programs 
echo ++++++++++++++++++++++++++++++++++
echo " "
     
cd $TARGETDIR  
unimake -m globk -c $COMPILER 
if( $status != 0 ) then
   echo "Failure in unimake for kf/globk -- make_globk terminated"   
   exit 1
endif 
cd globk; make
if( $status != 0 ) then
   echo "Failure in make for kf/globk -- make_globk terminated"   
   exit 1
endif 
touch tmp.o; \rm -f *.o 
echo Made globk 


# GLFOR needs to be done before the ones below since it
# contains the glfor_lib.a which is used by other programs
cd $TARGETDIR  
unimake -m glfor -c $COMPILER  
if( $status != 0 ) then
   echo "Failure in unimake for kf/glfor -- make_globk terminated"   
   exit 1
endif 
cd glfor; make
if( $status != 0 ) then
   echo "Failure in make for kf/glfor -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made glfor   

# GLOUT needs to be done before the ones below since it
# contains the glfor_lib.a which is used by other programs
cd $TARGETDIR  
unimake -m glout -c $COMPILER   
if( $status != 0 ) then
   echo "Failure in unimake for kf/glout -- make_globk terminated"   
   exit 1
endif 
cd glout; make
if( $status != 0 ) then
   echo "Failure in make for kf/glout -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o  
echo Made glout 


cd $TARGETDIR  
unimake -m glinit -c $COMPILER  
if( $status != 0 ) then
   echo "Failure in unimake for kf/glinit -- make_globk terminated"   
   exit 1
endif 
cd glinit; make
if( $status != 0 ) then
   echo "Failure in make for kf/glinit -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made glinit 

cd $TARGETDIR  
unimake -m glist -c $COMPILER  
if( $status != 0 ) then
   echo "Failure in unimake for kf/glist -- make_globk terminated"   
   exit 1
endif 
cd glist; make
if( $status != 0 ) then
   echo "Failure in make for kf/glist -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made glist 

cd $TARGETDIR  
unimake -m glorg -c $COMPILER  
if( $status != 0 ) then
   echo "Failure in unimake for kf/glorg -- make_globk terminated"   
   exit 1
endif 
cd glorg; make
if( $status != 0 ) then
   echo "Failure in make for kf/glorg -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o  
echo Made glorg 

cd $TARGETDIR  
unimake -m glsave -c $COMPILER  
if( $status != 0 ) then
   echo "Failure in unimake for kf/glsave -- make_globk terminated"   
   exit 1
endif 
cd glsave; make
if( $status != 0 ) then
   echo "Failure in make for kf/glsave -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o    
echo Made glsave 

# MOD TAH 190621: Moved glbak down because it now needs both glorg and glsave.
cd $TARGETDIR  
unimake -m glbak -c $COMPILER 
if( $status != 0 ) then
   echo "Failure in unimake for kf/glbak -- make_globk terminated"   
   exit 1
endif 
cd glbak; make
if( $status != 0 ) then
   echo "Failure in make for kf/glbak -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made glbak 

cd $TARGETDIR  
unimake -m globc -c $COMPILER   
if( $status != 0 ) then
   echo "Failure in unimake for kf/globc -- make_globk terminated"   
   exit 1
endif 
cd globc; make
if( $status != 0 ) then
   echo "Failure in make for kf/globc -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made globc 

cd $TARGETDIR  
unimake -m glred -c $COMPILER 
if( $status != 0 ) then
   echo "Failure in unimake for kf/glred -- make_globk terminated"   
   exit 1
endif 
cd glred; make
if( $status != 0 ) then
   echo "Failure in make for kf/glred -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o   
echo Made glred 

# GAMIT Interface modules

cd $TARGETDIR  
unimake -m htoglb -c $COMPILER
if( $status != 0 ) then
   echo "Failure in unimake for kf/htoglb -- make_globk terminated"   
   exit 1
endif 
cd htoglb; make
if( $status != 0 ) then
   echo "Failure in make for kf/htoglb -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made htoglb 

cd $TARGETDIR  
unimake -m ctogobs -c $COMPILER  
if( $status != 0 ) then
   echo "Failure in unimake for kf/ctogobs -- make_globk terminated"   
   exit 1
endif 
cd ctogobs; make
if( $status != 0 ) then
   echo "Failure in make for kf/ctogobs -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o
echo Made ctogobs 

# Utility programs

cd $TARGETDIR  
unimake -m extract -c $COMPILER
if( $status != 0 ) then
   echo "Failure in unimake for kf/extract -- make_globk terminated"   
   exit 1
endif 
cd extract; make
if( $status != 0 ) then
   echo "Failure in make for kf/extract -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o   
echo Made extract 

cd $TARGETDIR  
unimake -m blsum -c $COMPILER   
if( $status != 0 ) then
   echo "Failure in unimake for kf/blsumR -- make_globk terminated"   
   exit 1
endif 
cd blsum; make
if( $status != 0 ) then
   echo "Failure in make for kf/blsum -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o  
echo Made blsum 

# The following includes  edit_ext  getrel  plate      genrelref    apr_to_vel
#                         corcom    velcom  gapr_to_l  mit_to_iers  gen_ssu   gen_sng
#                         glbtog    doy     unify_svs  unify_apr     edit_val    
#     plus some utilities used only for VLBI

cd $TARGETDIR  
unimake -m utils -c $COMPILER 
if( $status != 0 ) then
   echo "Failure in unimake for kf/utils -- make_globk terminated"   
   exit 1
endif 
cd utils; make
if( $status != 0 ) then
   echo "Failure in make for kf/utils -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o    
echo Made utils 

cd $TARGETDIR  
unimake -m track -c $COMPILER  
if( $status != 0 ) then
   echo "Failure in unimake for kf/track -- make_globk terminated"   
   exit 1
endif 
cd track; make
if( $status != 0 ) then
   echo "Failure in make for kf/track -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made track 

cd $TARGETDIR  
unimake -m svpos -c $COMPILER  
if( $status != 0 ) then
   echo "Failure in unimake for kf/svpos -- make_globk terminated"   
   exit 1
endif 
cd svpos; make
if( $status != 0 ) then
   echo "Failure in make for kf/svpos -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo Made svpos 

cd $TARGETDIR  
unimake -m update_pmu -c $COMPILER   
if( $status != 0 ) then
   echo "Failure in unimake for kf/update_pmu -- make_globk terminated"   
   exit 1
endif 
cd update_pmu; make
if( $status != 0 ) then
   echo "Failure in make for kf/update_pmu -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o   
echo Made update_pmu 

# MOD TAH 200225: Add displace and simplfd
cd $TARGETDIR  
unimake -m displace -c $COMPILER   
if( $status != 0 ) then
   echo "Failure in unimake for kf/displace -- make_globk terminated"   
   exit 1
endif 
cd displace; make
if( $status != 0 ) then
   echo "Failure in make for kf/displace -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o   
echo Made displace and simplexfd 


# For plot, first make g1000 (NCAR) or x1000 (X-windows) library and then plot  
echo 'Skipping making of NCAR graphics library (g1000)'
#cd $TARGETDIR  
#unimake -m plot -l g1000 -c $COMPILER  
#if( $status != 0 ) then
#   echo "Failure in unimake for kf/plot/g1000 -- make_globk terminated"   
#   exit 1
#endif 
#cd plot/g1000; make
#if( $status != 0 ) then
#   echo "Failure in make for kf/plot/g1000 -- make_globk terminated"   
#   exit 1
#endif
#touch tmp.o; \rm -f *.o     
#echo 'Made plot/g1000'
cd $TARGETDIR
unimake -m plot -l x1000 -c $COMPILER   
if( $status != 0 ) then
   echo "Failure in unimake for kf/plot/x1000 -- make_globk terminated"   
   exit 1
endif 
cd plot/x1000; make
if( $status != 0 ) then
   echo "Failure in make for kf/plot/x1000 -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o 
echo 'Made plot/x1000 '
cd $TARGETDIR
unimake -m plot -c $COMPILER 
if( $status != 0 ) then
   echo "Failure in unimake for kf/plot -- make_globk terminated"   
   exit 1
endif 
cd plot; make
if( $status != 0 ) then
   echo "Failure in make for kf/plot -- make_globk terminated"   
   exit 1
endif
touch tmp.o; \rm -f *.o  
echo Made plot 


# Now remake the links
# MOD TAH 960812: Changed directory to $1 (which is the high
#                 level directory. 
link_globk_bin $1 

echo ''
echo ++++++++++++++++++
echo GLOBK installed 
echo ++++++++++++++++++
echo ''

endif
