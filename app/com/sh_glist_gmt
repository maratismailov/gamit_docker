#!/bin/csh -f  
#
#doc Plot usage of stations from a file produced by glist
#doc
#
# Plot usage of stations from a file produced by glist
# Last modified 2003/6/9 by S. McClusky
######################## INSTRUCTIONS #############################
# See if arguments passed
if( $#argv == 0 ) then
  echo '==========================================================================================='
  echo 'Plot usage of stations from a file produced by glist' 
  echo ''
  echo 'sh_glist_gmt usage:'
  echo ''
  echo 'sh_glist_gmt -gdlfile <experiment list> -rename <rename file> -window <lat/lon window> -kml'
  echo ''
  echo '  where:  <experiment list> -  Is a standard globk gdl file'
  echo '          <rename file>     -  Is an optional globk rename file'
  echo '          <lat/lon window>  -  Min lat, min lon, max lat max lon window coordinates'
  echo '          <kml>  -  create a .kml file'
  echo ''
  echo '  example: sh_glist_gmt -gdlfile emed.gdl -rename emed.eq -window 30 20 45 55 -kml'
  echo ''      
  echo '==========================================================================================='
  exit
endif 
##################### SET UP DEFAULTS #############################   
set gdlf = ''
set renf = ''
set kml = 'no'
set minlon = 0.0
set minlat = -90.0 
set maxlon = 360.0
set maxlat = 90.0
##################### DECIPHER COMMAND LINE #######################
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
    case -g*:
      set gdlf  = $input[2]  
    breaksw 
    case -r*:
      set renf  = $input[2]  
    breaksw 
    case -k*:
      set kml  = "yes"
    breaksw 
    case -w*:
      set window = "yes"  
      set minlat = $input[2] 
      set minlon = $input[3]
      set maxlat = $input[4]
      set maxlon = $input[5]
    breaksw 
  endsw
  if ( $#argv > 0 ) shift argv
end
alldone:
##################### GET THE JOB DONE ############################         
# Remove any leading directory information
set fn = $gdlf:t
# Now remove the extent from the file name.
set root = $fn:r
set list = $root.glst
set summ = $root.sum

# use modified version of glist!
glist_gmt $gdlf $root.glst  '' $renf
#
awk '/SITE occurences/,/^$/{if ((NF==2 || NF==3) && $1 != "GLBFILE:" ) print $0}' $root.glst >! tmp.xy0
awk '/SUMMARY of site position/,/SUMMARY of occurences/{if (NF==10)print 0,$9,substr($8,0,9)}' \
$root.glst >! tmp.txt0
awk '{if (NF==10 && $10=="P" && $1 >= minlon && $2 >= minlat && $1 <= maxlon && $2 <= maxlat)print $0}' minlat=$minlat minlon=$minlon maxlat=$maxlat maxlon=$maxlon $root.glst >! $root.sum
awk '{if ($4==1){print $1, $2, $7, "07  0  0 02", substr($8,1,4), "t"} else if ($4==2){print $1, $2, $7, "07  0  0 02", substr($8,1,4), "c"} else if ($4==3){print $1, $2, $7, "07  0  0 02", substr($8,1,4), "s"} else if ($4==4){print $1, $2, $7, "07  0  0 02", substr($8,1,4), "d"} else if ($4 >=5){print $1, $2, $7, "07  0  0 02", substr($8,1,4), "r"} }' $root.sum >! $root.names
set sites = `awk '{if (NF==10 && $10=="P" && $1 >= minlon && $2 >= minlat && $1 <= maxlon && $2 <= maxlat)print $8}' minlat=$minlat minlon=$minlon maxlat=$maxlat maxlon=$maxlon $root.glst`
grep GLBFILE $root.glst | awk 'NF==3 {print $2,1,$3}' >! tmp.fil0

if ( $kml == "yes" ) then
 echo '<?xml version="1.0" encoding="UTF-8"?>' >! $root.kml
 echo '<kml xmlns="http://earth.google.com/kml/2.0">' >> $root.kml
 echo '<Document>'>> $root.kml
 echo '  <name>My GPS Sites.kml</name>'>> $root.kml
 echo ' <Style id="GPSSiteStyle">'>> $root.kml
 echo '    <IconStyle id="GPSSiteIconStyle">'>> $root.kml
 echo '      <Icon>'>> $root.kml
 echo '        <href>root://icons/palette-3.png</href>'>> $root.kml
 echo '          <x>192</x>'>> $root.kml
 echo '          <y>64</y>'>> $root.kml
 echo '          <w>32</w>'>> $root.kml
 echo '          <h>32</h>'>> $root.kml
 echo '      </Icon>'>> $root.kml
 echo '    </IconStyle>'>> $root.kml
 echo '  </Style>'>> $root.kml
 echo '  <Folder>'>> $root.kml
 echo '    <name>My GPS Sites</name>'>> $root.kml
 echo '    <open>1</open>'>> $root.kml
 cat ${root}.sum | awk '{printf"    <Placemark> \n      <name> %s </name> \n      <description> %d %7.2f %7.2f </description> \n      <styleUrl>#GPSSiteStyle</styleUrl> \n      <Point> \n        <coordinates> %f, %f, %f </coordinates> \n      </Point> \n    </Placemark> \n",$8,$4,$5,$6,$1,$2,$3}' >> $root.kml
 echo '      </Folder>'>> $root.kml
 echo '    </Document>'>> $root.kml
 echo '    </kml>'>> $root.kml
endif
set range = `gmt gmtinfo -I1/1 < tmp.xy0`
set XMIN = 0
set XMAX = `echo $range | awk -F/ '{print $2+1}'`
set YMIN = `echo $range | awk -F/ '{print $3}'`
set YMAX = `echo $range | awk -F/ '{print $4}'`

\rm -f gmt.conf
gmt gmtset GMT_COMPATIBILITY 5
gmt gmtset FORMAT_GEO_MAP +ddd:mm:ss
gmt gmtset FONT_ANNOT_PRIMARY 12p
gmt gmtset DOTS_PR_INCH 300
gmt gmtset PROJ_LENGTH_UNIT i
gmt gmtset PS_SCALE_X 1
gmt gmtset PS_SCALE_Y 1

set MAXJ = `cat $root.sum | wc -l | awk '{printf ("%.0f", int($1/50)+1) }'`
if ($MAXJ <= 0) set MAXJ = 1

echo ""
echo "============================================================================"
echo "$#sites sites found in the requested window: $minlat $minlon $maxlat $maxlon"
echo "plotting data in $MAXJ frames" 

set J = 1
set k = 1
\rm -r ${root}.glist.*.ps >&! /dev/null
# Loop over frames (50 sites plotted per frame)
while ( $J <= $MAXJ ) 
  set NLO = `echo $J | awk '{print ($1-1)*50  }'`
  set NHI = `echo $J | awk '{print  $1   *50  }'`

  set NUM = `echo $NHI $NLO | awk '{print $1-$2+1}'`
  echo Making Frame $J, Sites $NLO to $NHI

  set i = 1
  \rm -r tmp.xy tmp.txt >&! /dev/null
  touch tmp.xy tmp.txt
# Loop over sites to be plotted on this frame
  while ( $i <= 50 && $k <= $#sites)
    grep $sites[$k] tmp.xy0 | awk -v k=$k '{print $1, k, $3}' >> tmp.xy
    grep $sites[$k] tmp.txt0 | awk -v k=$k '{print $1, k, $3}' >> tmp.txt
    @ i = $i + 1
    @ k = $k + 1
  end # while

# Plot frames 
  gmt psxy tmp.xy -R$XMIN/$XMAX/$NLO/$NHI -X1.i -Y2i -JX6i/6i -P  -Ss0.05i -G0 -Bxa5f1 -Bya5f1 -BwSE -U$1 -K >! ${root}.glist.$J.ps
  gmt pstext tmp.fil0 -R$XMIN/$XMAX/0/1 -Y0.2i  -JX -F7p,Courier+a-90+jBR -N -P -K -O >> ${root}.glist.$J.ps
  gmt pstext tmp.txt -R0/1/$NLO/$NHI  -Y-0.22i -X-.75i -JX -F+f10p,Courier+jBL -N -P -O  >> ${root}.glist.$J.ps

  set J = `echo $J | awk '{print $1 + 1}'`

end # while

echo "Created: "
echo ""
ls -l  ${root}.glst
echo ""
ls -l  ${root}.sum
echo ""
ls -l  ${root}.glist.*.ps
echo ""
ls -l ${root}.kml

\rm tmp.xy tmp.fil0 tmp.txt tmp.xy0 tmp.txt0
