      program makebase

      implicit none 

*     Rotuine to make baseline files from coordinate files generated by
*     multiplot (i.e., files of form mp_XXXXXX_N.dat1 etc.) 

      include '../includes/const_param.h'

      integer*4  max_base

      parameter ( max_base = 10000 )

* LOCAL VARIABLES
*
* val1(max_base)   - Values for site 1
* sig1(max_base)   - Sigmas for site 1
* ep1(max_base)    - Epoch

      real*8 val1(max_base), sig1(max_base), ep1(max_base) 
      real*8 dbase(max_base), vbase(max_base)
      real*8 rot1(3,3), rot2(3,3)
      real*8 dldn1(3), dldn2(3), loc1(3), loc2(3), neu1(3), neu2(3)
      real*8 sectag
      real*8 val2, sig2, ep2, jd1900
C     real*8 geod_pos1(3), geod_pos2(3)
C     real*8 loc_coord1(3), loc_coord2(3)
      real*8 pos1(3), pos2(3), len0, mlen0
      real*8 rho, sigb
      integer*4 num1, date(5), ierr, len_run,i,j,k , rcpar,
     .          trimlen, ld, jerr, kerr

      character*8 site1, site2, name
      character*128 file1, file2, fileout, dum, dum1, dum2, dum3,
     .              dir, apr_file, line
      character*1 type(5), file_type
      logical p1found, p2found, baseOK

      data type / 'N','E','U','L','p'/
      data jd1900 / 2415020.50d0 /

****  Get the runstring
      len_run = rcpar(1,site1)
      call casefold(site1)
      if( len_run.le.0 ) then
         write(*,100)
 100     format('Runstring: makebase site1 site2 <rho> <M>',
     .          ' <dir/> <apr_file>')
         stop
      end if
      len_run = rcpar(2,site2)
      call casefold(site2)
      if( len_run.le.0 ) then
         write(*,100)
         stop
      end if

      len_run = rcpar(3, dum)
      if( len_run.gt.0 ) then
          read(dum,*) rho
      else
          rho = 0.5    ! This make baseline sigmas ~ site sigmas
      end if

      len_run = rcpar(4,file_type)
      call casefold(file_type)
      if ( len_run.eq.0 ) file_type = 'E'
      ld = rcpar(5,dir)
      if ( ld.eq.0 ) then
          if( file_type.eq.'E' ) dir = 'mp_'  
          if( file_type.ne.'E' ) dir = 'mb_'  
          ld = 3
      end if

*     See if apriori passed so that we can compute length

      len_run = rcpar(6,apr_file) 
      p1found = .false.
      p2found = .false.
      if( len_run.gt.0 ) then
         open(101, file = apr_file, iostat=ierr, status='old')
         if( ierr.eq.0 ) then
*           get the coordinates of each of the sites
            jerr = 0
            do while ( jerr.eq.0 ) 
               read(101,'(a)', iostat=jerr) line
               if( index(line,site1).gt.0 .and. line(1:1).eq.' ' ) then
                   read(line,*,iostat=kerr) name, pos1
                   p1found = .true.
               else if(index(line,site2).gt.0 .and.
     .                 line(1:1).eq.' ' ) then    
                   read(line,*,iostat=kerr) name, pos2
                   p2found = .true.
               endif 
            end do
         else
            call report_error('IOSTAT',ierr,'aproiri file open',
     .                        apr_file,  0,'makebase')
         end if
      end if
      baseOK = .false. 
      if( p1found .and. p2found ) then
         baseOK = .true.
         write(*,180) site1, pos1, site2, pos2
 180     format('Found coordinates for ',a8,3F15.4,' and ',
     .          a8,3F15.4)
         len0 = sqrt( (pos1(1)-pos2(1))**2+(pos1(2)-pos2(2))**2+
     .                (pos1(3)-pos2(3))**2 )
         mlen0 = len0 - int(len0/10.d0)*10.d0
         write(*,*) mlen0, len0

*        Now compute the transformation needed to go from NEU at
*        each site to baseline length. 
         call XYZ_to_GEOD( rot1, pos1, loc1)
         call XYZ_to_GEOD( rot2, pos2, loc2)
         call loc_to_geod( loc1, neu1 )
         call loc_to_geod( loc2, neu2 )
         do i = 1, 3
            neu1(i) = neu1(i) - int(neu1(i)/10.d0)*10.d0
            neu2(i) = neu2(i) - int(neu2(i)/10.d0)*10.d0
         end do

         do i = 1,3
            dldn1(i) = 0
            dldn2(i) = 0
            do j = 1,3
               dldn1(i) = dldn1(i) + ((pos1(j)-pos2(j))/len0)*
     .                                rot1(i,j)
               dldn2(i) = dldn2(i) - ((pos1(j)-pos2(j))/len0)*
     .                                rot2(i,j)
            end do
         end do
      endif

          
****  Open the inputs looping over N E and U
      do i = 1, 3
      
          if( file_type.eq.'E' ) then          
             file1 = dir(1:ld) // site1 // '_' // type(i) // '.dat1'
             file2 = dir(1:ld) // site2 // '_'  // type(i) // '.dat1'
          else
             file1 = dir(1:ld)//site1//'.dat'// char(ichar('1')+i-1)
             file2 = dir(1:ld)//site2//'.dat'// char(ichar('1')+i-1) 
          endif
          write(fileout,240) site1, site2, i
  240     format('mp_',a,'_',a,'.dat',i1)

          open(101,file=file1, status='old', iostat=ierr)
          call report_error('IOSTAT',ierr,'open',file1,1,'makebase')
          open(102,file=file2, status='old', iostat=ierr)
          call report_error('IOSTAT',ierr,'open',file2,1,'makebase')
          open(200,file=fileout, status='unknown', iostat=ierr)
          call report_error('IOSTAT',ierr,'open',fileout,1,'makebase')
          write(*,*) 'Opened ', fileout(1:30), ierr
          if( baseOK .and. i.eq.3 ) then
             write(fileout,240) site1, site2, 5
             open(201,file=fileout, status='unknown', iostat=ierr)
             call report_error('IOSTAT',ierr,'open',fileout,1,
     .                         'makebase')
          end if

*         Now read all of file1
          ierr = 0
          j = 0
          read(101,'(a)') dum1
          write(200,'(a)') dum1(1:max(1,trimlen(dum1)))
          read(101,'(a)') dum2
          write(200,'(a)') dum2(1:max(1,trimlen(dum2)))
          read(101,'(a)') dum3
          if( baseOK .and. i .eq. 3 ) then
             write(201,'(a)') dum1(1:max(1,trimlen(dum1)))
             write(201,'(a)') dum2(1:max(1,trimlen(dum2)))
          end if 
          do while ( ierr.eq.0 )
             j = j + 1
             if( file_type.eq.'E' ) then
                 read(101,*,iostat=ierr) date, val1(j), sig1(j)
                 if( ierr.eq.0 ) then
                    call ymdhms_to_jd( date, sectag,ep1(j))
                 else
                   j = j -1
                   if( ierr.ne.-1 ) ierr = 0
                 end if
             else
                 read(101,*,iostat=ierr) ep1(j),  val1(j), sig1(j)
                 if( ierr.ne.0 ) then
                   j = j -1
                   if( ierr.ne.-1 ) ierr = 0
                 end if
             endif

*            If we are doing baseline save  dbase
             if( baseOK .and. ierr.eq.0 ) then
                if( i.eq.1 ) then
                   dbase(j) = 0.d0
                   vbase(j) = 0.d0
                end if
                dbase(j) = dbase(j) + dldn1(i)*(val1(j)-neu1(i))
             end if             
          end do
          num1 = j

****      Now read file two matchking baselines
          ierr = 0
          k = 0
          read(102,'(a)') dum
          read(102,'(a)') dum3
          write(200,'(a,a,f6.2)') dum3(1:max(1,trimlen(dum3))),
     .               ' Rho ', rho
          if( baseOK .and. i.eq.3) then
             write(201,'(a,a,f6.2,f7.4)') dum3(1:max(1,trimlen(dum3))),
     .                  ' Rho and Ratio ', rho, len0/(2.d0*earth_rad)
             if( file_type.eq.'E' ) then 
                write(201,250) site1,site2
 250            format('  Yr  Mon  Day  Hr  Min  ',a,'-',a,' dL/dH',
     .                 '  +- ')
             else
                write(201,255) site1,site2
 255            format('  Day  ',a,'-',a,' dL/dH',
     .                 '  +- ')
             end if
          end if
          if( file_type.eq.'E' ) then 
             write(200,260) site1,site2,type(i), site1, type(i),
     .                      site2,type(i)
 260         format('  Yr  Mon  Day  Hr  Min  ',a,'-',a,1x,a,'  +- ',
     .              1x,a,1x,a,'  +-  ',1x,a,1x,a,'  +-  ') 
          else
             write(200,265) site1,site2,type(i), site1, type(i),
     .                      site2,type(i)
 265         format('  Day   ',a,'-',a,1x,a,'  +- ',
     .              1x,a,1x,a,'  +-  ',1x,a,1x,a,'  +-  ')
          end if

           
             

          read(102,'(a)') dum
          do while ( ierr.eq.0 )
             k = k + 1
             if( file_type.eq.'E' ) then
                 read(102,*, iostat=ierr) date, val2, sig2
                 call ymdhms_to_jd( date, sectag,ep2)
             else
                 read(102,*, iostat=ierr) ep2, val2, sig2
             endif 
             if ( ierr.eq.0 ) then
                do j = 1,num1
                    if( abs(ep1(j)-ep2).lt.0.00007) then
                        sigb = sqrt(sig1(j)**2+sig2**2 - 
     .                               2*rho*sig1(j)*sig2)
                        if( file_type.eq.'E') then
                            
                            write(200,300) date, val2-val1(j), sigb,
     .                                 val1(j), sig1(j), val2, sig2,
     .                                 (ep1(j)-jd1900)/365.25
 300                        format(i5,4i3,6F15.4,f12.5) 
                            if ( baseOK .and. i.eq.3 ) then
                               write(201,300) date, 
     .                            (val2-val1(j))*len0/(2.d0*earth_rad), 
     .                             sigb*len0/(2.d0*earth_rad)
                            end if
                        else
                            write(200,310) ep2, val2-val1(j), sigb,
     .                                 val1(j), sig1(j), val2, sig2
 310                        format(f12.5, 6F15.4)
                            if ( baseOK .and. i.eq.3 ) then
                               write(201,310) ep2, 
     .                            (val2-val1(j))*len0/(2.d0*earth_rad), 
     .                             sigb*len0/(2.d0*earth_rad)
                             end if
                        end if

*                       Add the contribution to the baseline
                        if( baseOK ) then
                           dbase(j) = dbase(j) + dldn2(i)*(val2-neu2(i))
                           vbase(j) = vbase(j) + 
     .                              (dldn1(i)**2*sig1(j)**2 +
     .                               dldn2(i)**2*sig2**2 +
     .                      2*sqrt(rho)*dldn1(i)*dldn2(i)*sig1(j)*sig2)
                        end if
                    end if
                end do
             else
                if(  ierr.ne.-1 ) ierr = 0
             end if
          end do

          close(200)
          if( baseOK ) close(201)
          close(101)
          close(102)
      end do 

      if( baseOK ) then
         write(fileout,240) site1, site2, 4
         open(201,file=fileout, status='unknown', iostat=ierr)
         call report_error('IOSTAT',ierr,'open',fileout,1,'makebase')
         write(201,'(a)') dum1(1:max(1,trimlen(dum1)))
         write(201,'(a)') dum2(1:max(1,trimlen(dum2)))
         write(201,'(a)') dum3(1:max(1,trimlen(dum3)))
         if( file_type.eq.'E' ) then 
             write(201,450) site1,site2
 450         format('  Yr  Mon  Day  Hr  Min  ',a,'-',a,1x,' Length',
     .              '  +- ')
          else
             write(201,455) site1,site2
 455         format('  Day  ',a,'-',a,' Length     +- ')
          end if

          do j = 1, num1
       
             if( file_type.eq.'E' .and. vbase(j).ne.0 ) then
                 call jd_to_ymdhms( ep1(j),  date, sectag)                           
                 write(201,300) date, mlen0+dbase(j), 
     .               sqrt(vbase(j)), 
     .               (ep1(j)-jd1900)/365.25
             else if( vbase(j).ne.0 ) then
                  write(201,310) ep1(j), mlen0+dbase(j), 
     .                                sqrt(vbase(j))
            endif
         end do
         close(201)
      end if
 
****  Thats all
      end








