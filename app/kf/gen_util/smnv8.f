CTITLE 'SMNV8'
 
      SUBROUTINE SMNV8(A,B,N,M,PVROW,PVCOL,IUSE,PVRWB)

      implicit none 
C
C     FTN77 8-BYTE VERSION OF SMNV
C
C
C        N BRENNER - SUBROUTINE SYMINV
C     INVERSION OF A SYMMETRIC MATRIX IN PLACE.  ALGORITHM 150, COMM.
C     ACM, H. RUTISHAUSER.
C     A IS HALF OF A SYMMETRIC MATRIX, N BY N, ARRANGED SHORTEST ROWS
C     FIRST.  THAT IS, THE FIRST ROW IS 1 LONG, THE NEXT 2, ... THE
C     LAST N.  ELEMENT A(I,J) (I.GE.J) IS AT A(J+I*(I-1)/2).
C     B IS CONSTANT ARRAY OF DIMENSION N BY M.  THE SOLUTION OF THE
C     MATRIX EQUATION AX=B IS LEFT IN B.
C     PVROW, PVCOL AND IUSE ARE TEMPORARY ARRAYS OF LENGTH N.  PVRWB
C     IS A TEMPORARY ARRAY OF LENGTH M.
C     TO CONVERT THIS ROUTINE TO SINGLE PRECISION MATRIX INVERSION,
C     REMOVE THE DOUBLE PRECISION DECLARATION AND CHANGE DABS TO ABS
C     TWO LINES ABOVE STATEMENT NUMBER 20
C
      integer*4 n, m, iuse, i,j,k, ii, ij, ik, l, il, iter
      DIMENSION A(1),B(1),PVROW(1),PVCOL(1),IUSE(1),PVRWB(1)
C     DIMENSION A(N*(N+1)/2),B(N,M),PVROW(N),PVCOL(N),IUSE(N),PVRWB(M)
      REAL*8 A,B,DIAG,DMAX,DABS,PIVOT,PVCOL,PVROW,PVRWB
      
      k = 0
      pivot = 0.d0
 
C     INITIALLY, ALL ROWS ARE UNUSED.
      DO 10 I=1,N
10    IUSE(I)=0
      DO 130 ITER=1,N
C     SEARCH FOR THE LARGEST DIAGONAL ELEMENT, FOR USE AS A PIVOT.
      DMAX=0.
      II=1
      DO 40 I=1,N
      DIAG=DABS(A(II))
      IF(DIAG-DMAX)40,40,20
20    IF(IUSE(I))30,30,40
30    DMAX=DIAG
      K=I
      PIVOT=A(II)
40    II=II+I+1
      IF(DMAX)200,200,50
50    IUSE(K)=1
C     GET THE ELEMENTS OF THE PIVOT ROW AND THE PIVOT COLUMN, WITH THE
C     PROPER SIGNS.
      IK=1+1.d0*(K*(K-1))/2
      DO 120 I=1,N
      IF(I-K)60,80,90
60    PVROW(I)=A(IK)
      PVCOL(I)=A(IK)/PIVOT
      A(IK)=0.
      IK=IK+1
      IF(IUSE(I))120,120,70
70    PVCOL(I)=-PVCOL(I)
C     FOR J.GT.I, A(I,J) = (-1)**(IUSE(I)+IUSE(J)) * A(J,I).  THE IUSE
C     ARRAY IS USED AS IT IS BEFORE THIS PIVOT STEP, SO THAT IUSE(K)=0.
      GO TO 120
80    PVROW(I)=1.
      PVCOL(I)=-1./PIVOT
      A(IK)=0.
      IL=I
      DO 85 L=1,M
      PVRWB(L)=B(IL)
      B(IL)=0.
85    IL=IL+N
      GO TO 110
90    PVROW(I)=A(IK)
      PVCOL(I)=A(IK)/PIVOT
      A(IK)=0.
      IF(IUSE(I))110,110,100
100   PVROW(I)=-PVROW(I)
110   IK=IK+I
120   CONTINUE
C     PERFORM THE PIVOT STEP.
      IJ=1
      DO 130 I=1,N
      IL=I
      DO 125 L=1,M
      B(IL)=B(IL)-PVCOL(I)*PVRWB(L)
125   IL=IL+N
      DO 130 J=1,I
      A(IJ)=A(IJ)-PVCOL(I)*PVROW(J)
130   IJ=IJ+1
      RETURN
200   CONTINUE
      WRITE(*,210) ITER,N,(IUSE(I),I=1,N)
210   FORMAT(//," Failure to find non-zero diagonal element in",
     .        /," SMNV8 on iteration ",I3," for N = ",I3,".",
     .        /," IUSE = ",50(:,I2))
 
      end
 
